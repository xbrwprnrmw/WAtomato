/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, VoiceflowBot as PrismaVoiceflowBot } from "@prisma/client";

export class VoiceflowBotServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.VoiceflowBotCountArgs, "select">
  ): Promise<number> {
    return this.prisma.voiceflowBot.count(args);
  }

  async voiceflowBots<T extends Prisma.VoiceflowBotFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.VoiceflowBotFindManyArgs>
  ): Promise<PrismaVoiceflowBot[]> {
    return this.prisma.voiceflowBot.findMany<Prisma.VoiceflowBotFindManyArgs>(
      args
    );
  }
  async voiceflowBot<T extends Prisma.VoiceflowBotFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.VoiceflowBotFindUniqueArgs>
  ): Promise<PrismaVoiceflowBot | null> {
    return this.prisma.voiceflowBot.findUnique(args);
  }
  async createVoiceflowBot<T extends Prisma.VoiceflowBotCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.VoiceflowBotCreateArgs>
  ): Promise<PrismaVoiceflowBot> {
    return this.prisma.voiceflowBot.create<T>(args);
  }
  async updateVoiceflowBot<T extends Prisma.VoiceflowBotUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.VoiceflowBotUpdateArgs>
  ): Promise<PrismaVoiceflowBot> {
    return this.prisma.voiceflowBot.update<T>(args);
  }
  async deleteVoiceflowBot<T extends Prisma.VoiceflowBotDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.VoiceflowBotDeleteArgs>
  ): Promise<PrismaVoiceflowBot> {
    return this.prisma.voiceflowBot.delete(args);
  }
}
